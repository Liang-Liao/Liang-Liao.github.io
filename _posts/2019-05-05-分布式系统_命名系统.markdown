---
layout: post
title:  "分布式系统——命名系统"
date:   2019-05-05
categories: 分布式系统
tags: 分布式系统 命名系统
author: Liao Liang
mathjax: true
---

* content
{:toc}

> * 名称用来共享资源、唯一标识实体、指向位置等
> * 命名的一个重要作用：把名称解析为它所指向的实体
> * 分布式与非分布式系统的命名的区别在于命名系统实现的方式
> * 分布式系统中使用名称的三种不同的重要方法
> * 用户友好的名称的组织和实现
> * 名称与实体位置无关
> * 用不同的字符来描述实体

--- --- ---

## 名称、标识符和地址

* 名称：由位或字符组成的字符串，用来指向一个实体
* 地址：访问点的名称
* 标识符：用来唯一标识实体的名称
* 用户友好名称：为用户使用定制的名称

## 无层次命名

使用标识符唯一地表示实体

### 广播和多播

广播，**缺点**：

* 网络带宽倍请求数据包浪费
* 太多的主机被它们不能回答的请求中断

解决方法：转换成**多播**
多播的两种使用方式：

1. 对多播实体的通用定位服务
2. 让它与复制的实体相关联，并且使用多播查找最近（例：最先回复的）的实体副本

### 转发指针

用于移动实体定位
原理：当实体从A到B时，它将留下一个指针，这个指针指向它在B中的新位置

优点：简便
缺点：

1. 链可能会很长
2. 中间位置必须维护转发指针
3. 链很脆弱，易断开

实例：SSP链（Shapiro 1992）

### 基于宿主位置的方法

使用宿主代理来管理主机的当前位置
缺点：

1. 多了与宿主代理通信的步骤，增加了通信延迟
2. 使用了固定的宿主位置

解决方法：注册宿主位置

### 分布式散列表 DHT

Chord系统，指状表

复杂性体现在保持指状表的更新

问题：请求跨因特网进行路由时不稳定
解决方法：考虑了底层网络的设计方法

1. 基于拓扑的结点标识符赋值
2. 邻近路由，结点维护一个转发请求的可选列表
3. 邻近邻结点选择

### 分层定位

一般方法：基于Globe定位服务

> * 网络划分为一组域
> * 最底层为子域
> * 最顶层的目录结点为根结点

操作：

1. 查询
2. 更新
3. 删除

## 结构化命名

### 名称空间

* 绝对路径和相对路径：是否从根结点开始
* 绝对名称和相对名称：是否根据相同的目录结点进行解释

UNUX文件系统中：

* 根块
* 超级块
* 一系列索引结点（信息结点）

### 名称解析

名称解析：查询名称的过程

#### 终止机制

知道如何启动以及在何处启动名称解析

#### 链接和挂载

别名：同一实体的另一个名称。
实现方法：

1. 允许多个绝对路径名来指向命名图中的同一结点
2. 用叶节点来表示实体，而不是存储实体的地址或位置，该结点存储绝对路径名

> 存储结点标识符的目录结点称为**挂接点**
> 外部名称空间中的目录结点称为**挂载点**

在分布式系统中挂载外部名称空间：
1）访问协议的名称：解析成协议的执行
2）服务器的名称：解析成可以到达服务器的地址
3）挂载点的名称：解析成外部名称空间的结点标识符

实例：NFS

### 名称空间的实现

逻辑上分为三层：

1. 全局层：由根结点以及其他逻辑上靠近根结点的目录结点，也就是根结点的子结点组成
2. 行政层：由那些在单个组织内一起被管理的目录结点组成
3. 管理层：由经常改变的结点组成

考虑的两个方面：**可用性**和**性能**。

### 名称解析的实现

负责确保名称解析过程得以执行

URL表示法有两种实现方法：

1. 迭代名称解析：
2. 递归名称解析：
缺点：需要每台服务器都有比较高的性能
优点：
1）缓存结果更为有效
2）减少通信开销

### 示例：域名系统（DNS）

#### DNS名称空间

分层组织
不同的资源记录：

> * SOA（start of authority）
> * A（address）
> * MX（mail exchange）
> * SRV
> * NS（name server）
> * CNAME（canonical name）
> * PTR（pointer）
> * HINFO（host info）
> * TXT（text）

#### DNS的实现

#### 非集中式DNS实现

## 基于属性的命名

要求只需用户提供所有查找实体的一些描述即可
基于属性的命名：在分布式系统中，使用**（属性，值）**来描述实体

### 目录服务

资源描述框架：

* 三联体：主题、断言和对象
* 查询方式：穷举搜索
解决方法：下几节内容

### 分层实现：LDAP

* 轻量级目录访问协议（lightweight directory access protocol）：
* 目录信息库（DIB）：所有目录项的集合
* 目录信息树（DIT）：通过依次列出RDN来使用全局唯一名称，使得目录项集合形成了分层
* LDAP森林

### 非集中式实现

#### 映射到分布式散列表

#### 语义覆盖网络