---
layout:     post
title:      "软件工程：基于模式的设计"
subtitle:   "通过设计模式来进行软件设计"
date:       2019-05-07
author:     "廖亮"
header-img: "img/post-bg-software.jpg"
tags:
    - 软件工程
    - 设计模式
---

基于模式的设计：通过查找一组已被证明有效的解决方法来创建新的应用系统。

步骤：问题分割，分体分类，定义问题子集，确定设计模式。

前身由建筑师Christopher Alexander提出：每个模式都描述了在我们所处环境内**反复出现**的问题，然后描述该问题的核心解决方案，这样你就可以几百万次地**重复使用**该解决方案，而不必用同样的方式重复工作两次。


## 目录

* [设计模式](#设计模式)
  * [模式的种类](#模式的种类)
  * [框架](#框架)
  * [描述模式](#描述模式)
  * [模式语言和存储](#模式语言和存储)
* [基于模式的软件设计](#基于模式的软件设计)
  * [不同环境下基于模式的设计](#不同环境下基于模式的设计)
  * [在模式中思考](#在模式中思考)
  * [设计任务](#设计任务)
  * [建立模式组织表](#建立模式组织表)
  * [构建级设计模式](#构建级设计模式)
  * [WebApp设计模式](#WebApp设计模式)

## 设计模式

描述：表示**特定上下文**、**问题**和**解决方案**三者之间关系的三部规则。

只有适合问题所处环境的解决方案才是有效的。提供一个**最能满足**影响因素的解决方案。

特点：

* 可以解决问题
* 是已经得到验证的概念
* 解决方案并不明显
* 描述关系
* 具有显著的人性元素

重点是：**重用**

### 模式的种类

* 无生产力的模式：只描述现象，不提供解决方案
* 有生产力的模式：理想情况下，能够用于“产生”一个应用系统或基于计算机的系统，其体系结构使系统适应变更。（生产性）

举例：

* 体系结构模式
* 数据模式
* 构建模式
* 界面设计模式
* Web应用模式
* 习惯用语

面向对象设计，三种模式：创建型模式、结构型模式和行为型模式。具体参看经典的23中设计模式。

### 框架

框架：与实体相关的架构基础设施。

框架**不是体系结构**，而是一个具有“插入点”集合的架构。

框架与设计模式的区别：

1. 设计模式比框架更抽象
2. 设计模式是比框架更小的体系结构元素
3. 对设计模式的研究比框架少

### 描述模式

怎样才能找到所需要的模式呢？

答案取决于以下四个问题：

1. 要解决的问题
2. 所在的环境
3. 影响因素
4. 提出的解决方案

注意选择一个好的设计模式名称。

### 模式语言和存储

模式语言类似于特定应用领域内问题解决的超文本指令手册。不是模式的顺序列表，而是一个内部相互链接的集合。

存储在从网上可以访问的模式存储库中。

## 基于模式的软件设计

应该利用一切机会去寻找**现成的设计模式**，而不是去创建新模式。

### 不同环境下基于模式的设计

需求模型：建立上下文环境

软件设计：应用成熟的技术把需求模型中的抽象表示转化成更具体的形式。

### 在模式中思考

思考过程：

1. 理解全局
2. 检查全局
3. 建立环境或架构
4. 寻找模式
5. 重复以上步骤
6. 优化设计

### 设计任务

设计任务：

1. 对问题分层
2. 确定模式语言
3. 确定体系结构模式
4. 确定构建模式
5. 重复2至3
6. 确定用户界面设计模式
7. 比较要解决问题和现存模式
8. 优化设计

### 建立模式组织表

问题-应用领域表，表项为设计模式名称

### 常见设计错误

强调质量基础

即使模式能解决手头的问题，也不要急于使用，如果环境和影响因素是错的，就要去寻找另一个模式

评审解决

## 体系结构模式

体系结构模式定义了特定的方法处理系统的某些特性

代表性实例：

* 访问控制
* 并发性，例：操作系统进程管理模式，任务调度模式
* 分布性，考虑1）实体间联系的方式 2）发生通信的性质，例：代理模式
* 持久性，例：数据库管理系统模式，应用级持久性模式

## 构建级设计模式

关注系统的某些功能元素

问题、环境和影响因素。

## 用户界面设计模式

10种设计模式：

* TopLevelNavigaion：用于网站或应用程序完成一些主要功能
* CardStack：按特定顺序对特定子功能分类
* Fill-in-the-Blanks：文本框
* SortableTable：显示记录，可以按选择任意列排序
* BreadCrumbs：导航路径
* EditInPlace：文本编辑功能
* SimpleSearch：在数据源中搜索简单数据项
* Wizard：一系列引导窗口
* ShoppingCart：购买选项清单
* ProgressIndicator：显示操作进度

## WebApp设计模式

侧重于二维的模式分类：以模式为焦点的设计以及粒度的级别

### 设计焦点

### 设计粒度